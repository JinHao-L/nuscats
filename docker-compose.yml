# For local development purposes only!
version: '3.8'
services:
  s3:
    image: minio/minio
    volumes: 
      - s3:/data
    command: server /data
    network_mode: host
    environment: 
      - MINIO_ACCESS_KEY=access_key
      - MINIO_SECRET_KEY=secret_key
  # Creates buckets and sets policy for viewing objects
  setup-s3:
    image: minio/mc
    depends_on: 
      - s3
    network_mode: host
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add s3 http://localhost:9000 access_key secret_key;
      /usr/bin/mc rm -r --force s3/nuscats;
      /usr/bin/mc mb s3/nuscats;
      /usr/bin/mc policy set download s3/nuscats;
      exit 0;
      "
  postgres:
    image: postgres
    network_mode: host
    environment: 
      - POSTGRES_PASSWORD=postgres
    volumes: 
      - postgres:/var/lib/postgresql/data
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    network_mode: host
    volumes: 
      - /app/node_modules
      - /app/frontend/node_modules
      - .:/app
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    depends_on: 
      - postgres
      - s3
      - setup-s3
    environment: 
      # Database Configuration
      - DB_HOST=localhost
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_SYNCHRONIZE=true
      # JWT Configuration
      - JWT_ACCESS_TOKEN_SECRET=accSecret
      - JWT_REFRESH_TOKEN_SECRET=refSecret
      # Object Storage Configuration
      - AWS_REGION=ap-southeast-1
      - AWS_S3_ENDPOINT=http://localhost:9000
      - AWS_ACCESS_KEY_ID=access_key
      - AWS_SECRET_ACCESS_KEY=secret_key
      - AWS_S3_SIGNATURE_VERSION=v4
      - AWS_S3_BUCKET_NAME=nuscats
    network_mode: host
    volumes: 
      - /app/node_modules
      - /app/backend/node_modules
      - .:/app


volumes: 
  s3:
  postgres: